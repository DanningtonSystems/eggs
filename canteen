#!/usr/bin/env bash
ProductName="Canteen"
ProductVersion=1.0.0
ProductMaster=false
ProductPathDirectory="$( cd "$( dirname $0 )" && pwd )"
ProductDependentPath="$ProductPathDirectory/.canteen"
if [ -f ".enablepublish" ]; then
    export ProductMaster=true
fi

function Get-Script() {
    chmod +x "$1/canteen.sh"
    chmod +x $ProductDependentPath/loader.sh
    "$ProductDependentPath/loader.sh" "$1"
}

clear
echo "== PASSING CONTROL TO CANTEEN =="
function canteen() {
    if [ "$ProductMaster" = "true" ]; then
        echo "$ProductName v$ProductVersion by DanningtonSystems (PUBLISHER MODE ENABLED)"
    else
        echo "$ProductName v$ProductVersion by DanningtonSystems"
    fi
    echo "Select a recipe to build:"
    echo "1. developer/alpine:latest (developer:alpine-latest)"
    echo "2. developer/ubuntu:latest (developer:ubuntu-latest)"
    echo "3. pterodactyl/nodejs (nodejs:*)"
    read -p "Select the number corresponding to the recipe that should be built, or press CTRL+C (^C) to exit: " InputTag

    if [[ "$InputTag" == "1" ]]; then
        echo "Building developer:alpine-latest from developer/alpine:latest..."
        Get-Script $ProductPathDirectory/developer/alpine/latest
    elif [[ "$InputTag" == "2" ]]; then
        echo "Building debian/ubuntu-latest from developer/debian:ubuntu-latest..."
        Get-Script $ProductPathDirectory/developer/ubuntu/latest
    elif [[ "$InputTag" == "3" ]]; then
        echo "Building pterodactyl/nodejs from pterodactyl/nodejs:*..."
        Get-Script $ProductPathDirectory/pterodactyl/nodejs
    else
        clear
        echo "The option that you chose was invalid. Please input a valid option."
        canteen
    fi
}

canteen

echo "== RESTORING CONTROL TO SHELL =="